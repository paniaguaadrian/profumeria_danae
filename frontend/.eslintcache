[{"/Users/adrianpaniaguasanchez/Documents/Developement/08.eCommerce-Udemy-brad/frontend/src/screens/CartScreen.jsx":"1","/Users/adrianpaniaguasanchez/Documents/Developement/08.eCommerce-Udemy-brad/frontend/src/screens/PlaceOrderScreen.jsx":"2","/Users/adrianpaniaguasanchez/Documents/Developement/08.eCommerce-Udemy-brad/frontend/src/App.js":"3","/Users/adrianpaniaguasanchez/Documents/Developement/08.eCommerce-Udemy-brad/frontend/src/screens/ProfileScreen.jsx":"4","/Users/adrianpaniaguasanchez/Documents/Developement/08.eCommerce-Udemy-brad/frontend/src/screens/RegisterScreen.jsx":"5"},{"size":3579,"mtime":1607638061674,"results":"6","hashOfConfig":"7"},{"size":4469,"mtime":1607886858097,"results":"8","hashOfConfig":"7"},{"size":1508,"mtime":1607882355093,"results":"9","hashOfConfig":"7"},{"size":3609,"mtime":1607814860239,"results":"10","hashOfConfig":"7"},{"size":3173,"mtime":1607692533223,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"waiefg",{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adrianpaniaguasanchez/Documents/Developement/08.eCommerce-Udemy-brad/frontend/src/screens/CartScreen.jsx",[],"/Users/adrianpaniaguasanchez/Documents/Developement/08.eCommerce-Udemy-brad/frontend/src/screens/PlaceOrderScreen.jsx",["24","25"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// * Import Actions\n\n// * Components\nimport Message from \"../components/Message\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nconst PlaceOrderScreen = () => {\n  const cart = useSelector((state) => state.cart);\n  // * Calculate prices\n\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n\n  // ! Important:\n  // Depends on our company to get shipping cost to our costumers or not. We can declare if the items.price is less than X €, then we will charge shipping, if not, not.\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 10);\n\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\n\n  cart.totalPrice = addDecimals(\n    Number(cart.itemsPrice) + Number(cart.shippingPrice)\n  );\n\n  const placeOrderHandler = () => {\n    console.log(\"order\");\n  };\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address: </strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\n                {cart.shippingAddress.postalCode},{\" \"}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x {item.price}€ = {item.qty * item.price}€\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>{cart.itemsPrice}€</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>{cart.shippingPrice}€</Col>\n                </Row>\n              </ListGroup.Item>\n              {/* <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>{cart.taxPrice}€</Col>\n                </Row>\n              </ListGroup.Item> */}\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>{cart.totalPrice}€</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrderScreen;\n",["26","27"],"/Users/adrianpaniaguasanchez/Documents/Developement/08.eCommerce-Udemy-brad/frontend/src/App.js",[],"/Users/adrianpaniaguasanchez/Documents/Developement/08.eCommerce-Udemy-brad/frontend/src/screens/ProfileScreen.jsx",[],"/Users/adrianpaniaguasanchez/Documents/Developement/08.eCommerce-Udemy-brad/frontend/src/screens/RegisterScreen.jsx",[],{"ruleId":"28","severity":1,"message":"29","line":1,"column":17,"nodeType":"30","messageId":"31","endLine":1,"endColumn":25},{"ruleId":"28","severity":1,"message":"32","line":5,"column":10,"nodeType":"30","messageId":"31","endLine":5,"endColumn":21},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-global-assign","no-unsafe-negation"]